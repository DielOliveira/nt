continue
@doacao
continue
reentrando.flagativo
reentrando
continue
doacoes
continue
doacoes
continue
doacoes
continue
doacoes
continue
doacoes
continue
doacoes
continue
Doacao.where('tempo > ?', Time.now)
Doacao.where(:tempo > Time.now)
Time.now
exit
reentradas.count
exit
continue
doacaorecebida.count
doacaorealizada.count
reentradas.count
cadastro_id
continue
cadastro
exit
cadastro.save
cadastro
continue
reentrada.save
rede.save
financeiro.save
usuario.save(:validate => false)
usuario.save
cadastro.save
continue
user.cadastro
exit
continue
indicado.cadastro_2.id
continue
indicado.cadastro_2.id
continue
indicado.cadastro_2.id
indicado
continue
checksum(@usuario.cadastro_id)
exit
checksum(@usuario.cadastro_id)
continue
checksum(cadastro_id)
checksum
rede
dadosfinanceiros
cadastro
usuario
continue
usuario.save(:validate => false)
usuario.save
cadastro.save(:validate => false)
continue
usuario?
if usuario end
usuario.save
usuario?
if usuario
usuario
continue
cadastro.save(:validate => false)
continue
exit
Dadosfinanceiro.find_by_cadastro_id(52)
Dadosfinanceiro.find_by_cadastro_id(user.cadastro_id)
userfinan
userfinan.id
user.cadastro_id
user
exit
params[:cadastro_id]
continue
redes
continue
@doacao.id
continue
usuario.email
usuario
continue
doacoes
continue
params[:id]
@doacaoid[
continue
user.cadastro_id
continue
rede.blank?
rede.blank
rede
reentradas.blank?
reentradas.blank ?
reentradas.blank
reentradas
continue
reentrada.destroy
reentradas = Reentrada.where(:cadastro_adicionado_id => cadastro.id)
Reentrada.where(:cadastro_adicionado_id => cadastro.id)
continue
cadastro.id
continue
@doacao.comprovante
continue
@doacao
doacao_params[:comprovante] 
doacao_params[:flagenviada] 
doacao_params
imagem["public_id"] + imagem["format"]
doacao_params[:comprovante]
continue
imagem["public_id"]
imagem.public_id
imagem
imagem[public_id]
imagem[:public_id]
imagem.public_id
imagem
imagem = Cloudinary::Uploader.upload("public" + @doacao.avatar_url)
 @doacao.update(doacao_params)
continue
@doacao.avatar_url
continue
teste
teste = Cloudinary::Uploader.upload("public" + @doacao.avatar_url)
continue
    file.write(uploaded_io.read)
  File.open(Rails.root.join('public', 'uploads', uploaded_io.original_filename), 'wb') do |file|
params[:person][:picture]
@doacao.comprovante[:tempfile].path
@doacao.comprovante[:tempfile]
@doacao.comprovante[:tempfile].path
@doacao.comprovante.[:tempfile].path
@doacao.comprovante
@doacao.comprovante.name
@doacao.comprovante.url
@doacao.comprovante
@doacao.comprovante.url
@doacao.comprovante
continue
Cloudinary::Uploader.upload("public/uploads/doacao/avatar/23/239d7fb00d5dd9198a52258c668c342d.jpg")
@doacao.default_url
Cloudinary::Uploader.upload("/uploads/doacao/avatar/23/239d7fb00d5dd9198a52258c668c342d.jpg")
@doacao.avatar_url
@doacao
continue
@doacao.avatar_url
@doacao.avatar
@doacao
continue
doacao_params[:avatar][@headers]
doacao_params[:avatar]
doacao_params[:avatar][:name]
doacao_params[:avatar]
doacao_params[:flagenviada]
doacao_params
doacao_params.avatar
doacao_params.avatar_url
doacao_params[:avatar]@tempfile
doacao_params.avatar_url
doacao_params[:avatar]avatar_url
doacao_params[:avatar].avatar_url
doacao_params[:avatar].name
doacao_params[:avatar]
doacao_params[:avatar].filename
doacao_params[:avatarr]
doacao_params[:avatar]
doacao_params
params[:avatar]
continue
@doacao.avatar?
@doacao.avatar
@doacao.avatar?
@doacao.avatar
@doacao
continue
@doacao.avatar_url
@doacao.avatar
continue
@usuario
exit
continue
numeros.split(/,/)
numeros.split(,)
numeros = '2,2,2,2,2'
numeros.split
result
continue
dados.count
continue
dados.count
dados
exit
@html
continue
@html
continue
@html
continue
@html
continue
@html
exit
BuscaPessoas(dados_pessoas.id)
continue
BuscaPessoas(dados_pessoas.id)
continue
dados
continue
dados
continue
dados_pessoas.id
dados_pessoas
continue
@html
continue
if html == nil
html
continue
dados.count
html
exit
continue
exit
continue
result
@cont
continue
@cont
continue
result
@cont
continue
@cont
cont
continue
result
c
continue
array
continue
array
continue
array.join
